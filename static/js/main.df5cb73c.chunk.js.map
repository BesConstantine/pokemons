{"version":3,"sources":["reportWebVitals.ts","store/display.ts","store/pokemons.ts","store/search.ts","store/type.ts","store/types.ts","store/urlForPokemons.ts","store/index.ts","api/pokemons.js","components/Display/Display.tsx","components/PokemonCard/PokemonCard.tsx","components/PokemonList/PokemonList.tsx","components/Search/Search.tsx","components/Type/Type.tsx","components/Table/Table.tsx","api/types.js","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CHANGE_DISPLAY","action","payload","type","displayState","display","GET_POKEMONS","ADD_POKEMON","pokemonsState","pokemons","CHANGE_SEARCH","searchState","search","SET_TYPE","typeState","GET_TYPES","typesState","types","CHANGE_URL","urlForPokemonsState","urlForPokemons","rootReducer","combineReducers","state","store","createStore","composeWithDevTools","applyMiddleware","thunk","createPokemon","pokemonFromApi","name","id","map","moves","move","image","sprites","front_default","hp","stats","base_stat","attack","defense","special_attack","special_defense","speed","Display","dispatch","useDispatch","useSelector","setDisplay","inputDisplay","actionDisplay","className","classNames","onClick","PokemonCard","props","pokemon","useState","isVisibleDetails","setIsVesibleDetails","currentMove","setCurrentMove","src","alt","toUpperCase","slice","disabled","length","PokemonList","visiblePokemons","filter","lowSearch","toLowerCase","includes","Search","value","onChange","event","inputSearch","target","actionSearch","Type","inputType","actionType","Table","isLoading","setIsLoading","urlForPokemon","scrollHandle","scrollHeight","documentElement","console","log","scrollTop","innerHeight","window","useEffect","axios","get","data","results","document","addEventListener","removeEventListener","url","response","actionUrlForPokemon","next","actionPokemons","finally","setTimeout","getPokemonsFromApi","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df5cb73c.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AnyAction} from 'redux';\n\nconst CHANGE_DISPLAY = 'CHANGE_DISPLAY';\n\nexport const action = {\n  changeDisplay: (payload: string) => ({ type: CHANGE_DISPLAY, payload }),\n}\n\nexport type DisplayState = {\n  display: string,\n}\n\nexport const displayState: DisplayState = {\n  display: 'cards'\n}\n\nexport const displayReducer = (state = displayState, action: AnyAction) => {\n  switch (action.type) {\n    case CHANGE_DISPLAY:\n      return { ...state, display: action.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\nimport { Pokemon } from '../types/pokemon';\n\nconst GET_POKEMONS = 'GET_POKEMONS';\nconst ADD_POKEMON = 'ADD_POKEMON';\n\nexport const action = {\n  getPokemons: (payload: any) => ({ type: GET_POKEMONS, payload }),\n  addPokemon: (payload: any) => ({ type: ADD_POKEMON, payload }),\n};\n\nexport type PokemonsState = {\n  pokemons: Pokemon[],\n};\n\nexport const pokemonsState: PokemonsState = {\n  pokemons: [],\n}\n\nexport const pokemonsReducer = (state = pokemonsState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_POKEMONS:\n      return { ...state, pokemons: [ ...state.pokemons, ...action.payload ]};\n    case ADD_POKEMON:\n      return { ...state, pokemons: [ ...state.pokemons, action.payload ]};\n    default:\n      return state;\n  }\n};\n","import {AnyAction} from 'redux';\n\nconst CHANGE_SEARCH = 'CHANGE_SEARCH';\n\nexport const action = {\n  changeSearch: (payload: string) => ({ type: CHANGE_SEARCH, payload }),\n};\n\nexport type SearchState = {\n  search: string,\n};\n\nexport const searchState: SearchState = {\n  search: '',\n};\n\nexport const searchReducer = (state = searchState, action: AnyAction) => {\n  switch (action.type) {\n    case CHANGE_SEARCH:\n      return { ...state, search: action.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst SET_TYPE = 'SET_TYPE';\n\nexport const action = {\n  setType: (payload: string) => ({ type: SET_TYPE, payload }),\n};\n\nexport type TypeState = {\n  type: string,\n};\n\nexport const typeState: TypeState = {\n  type: '',\n};\n\nexport const typeReducer = (state = typeState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_TYPE:\n      return { ...state, type: action.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\nimport { Type } from '../types/type';\n\nconst GET_TYPES = 'GET_TYPES';\n\nexport const action = {\n  getType: (payload: any) => ({ type: GET_TYPES, payload }),\n};\n\nexport type TypesState = {\n  types: Type[],\n};\n\nexport const typesState: TypesState = {\n  types: [],\n}\n\nexport const typesReducer = (state = typesState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_TYPES:\n      return { ...state, types: [ ...action.payload ]};\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst CHANGE_URL = 'CHANGE_URL';\n\nexport const action = {\n  changeUrl: (payload: string) => ({ type: CHANGE_URL, payload }),\n};\n\nexport type UrlForPokemonsState = {\n  urlForPokemons: string,\n};\n\nexport const urlForPokemonsState: UrlForPokemonsState = {\n  urlForPokemons: 'https://pokeapi.co/api/v2/pokemon',\n}\n\nexport const urlForPokemonsReducer = (state = urlForPokemonsState, action: AnyAction) => {\n  switch (action.type) {\n    case CHANGE_URL:\n      return { ...state, urlForPokemons: action.payload };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { displayReducer, DisplayState } from './display';\nimport { pokemonsReducer, PokemonsState } from './pokemons';\n\nimport { searchReducer, SearchState } from './search';\nimport { typeReducer, TypeState } from './type';\nimport { typesReducer, TypesState } from './types';\nimport { urlForPokemonsReducer, UrlForPokemonsState } from './urlForPokemons';\n\nexport type RootState = {\n  search: SearchState,\n  type: TypeState,\n  types: TypesState,\n  pokemons: PokemonsState,\n  urlForPokemons: UrlForPokemonsState,\n  display: DisplayState,\n};\n\nconst rootReducer = combineReducers({\n  search: searchReducer,\n  type: typeReducer,\n  types: typesReducer,\n  pokemons: pokemonsReducer,\n  urlForPokemons: urlForPokemonsReducer,\n  display: displayReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n","import axios from 'axios';\n\nimport { action as actionPokemons } from '../store/pokemons'\nimport { action as actionUrlForPokemon } from '../store/urlForPokemons';\n\nfunction createPokemon(pokemonFromApi) {\n  const name = pokemonFromApi.name;\n  const id = pokemonFromApi.id;\n  const types = pokemonFromApi.types.map(type => type.type.name);\n  const moves = pokemonFromApi.moves.map(move => move.move.name);\n  const image = pokemonFromApi.sprites.front_default;\n  const hp = pokemonFromApi.stats[0].base_stat;\n  const attack = pokemonFromApi.stats[1].base_stat;\n  const defense = pokemonFromApi.stats[2].base_stat;\n  const special_attack = pokemonFromApi.stats[3].base_stat;\n  const special_defense = pokemonFromApi.stats[4].base_stat;\n  const speed = pokemonFromApi.stats[5].base_stat;\n\n  return {\n    id,\n    name,\n    types,\n    moves,\n    image,\n    hp,\n    attack,\n    defense,\n    special_attack,\n    special_defense,\n    speed,\n  };\n}\n\nexport const getPokemonsFromApi = (url, setIsLoading) => {\n  if (url) {\n    return function(dispatch) {\n    axios.get(url)\n      .then(response => {\n        dispatch(actionUrlForPokemon.changeUrl(response.data.next))\n        for (const pokemon of response.data.results) {\n          axios.get(pokemon.url)\n            .then(response => {\n              dispatch(actionPokemons.addPokemon(createPokemon(response.data)))\n              console.log('loaded pokemon ' + response.data.id)\n            })\n        }\n      })\n      .finally(() =>setTimeout(() => setIsLoading(false), 1000))\n    }\n  }\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport classNames from 'classnames';\nimport { action as actionDisplay } from '../../store/display';\n\nimport './Display.scss';\n\nexport const Display = () => {\n  const dispatch = useDispatch();\n  const display = useSelector((state: RootState) => state.display.display);\n  const setDisplay = (inputDisplay: string) => {\n    dispatch(actionDisplay.changeDisplay(inputDisplay));\n  };\n\n  return (\n    <div className=\"Display\">\n      <button\n        className={classNames(\n          'Display-Button',\n          'Display-Button_Cards',\n          { 'Display-Button_Active': display === 'cards' },\n        )}\n        onClick={() => setDisplay('cards')}\n      ></button>\n      <button\n        className={classNames(\n          'Display-Button',\n          'Display-Button_List',\n          { 'Display-Button_Active': display === 'list' },\n        )}\n        onClick={() => setDisplay('list')}\n      ></button>\n    </div>\n  );\n};","import React, { useState } from 'react';\nimport { Pokemon } from '../../types/pokemon'\nimport classNames from 'classnames';\n\nimport './PokemonCard.scss';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store';\n\ninterface Props {\n  pokemon: Pokemon,\n}\n\nexport const PokemonCard = (props: Props) => {\n  const { pokemon } = props;\n  const [isVisibleDetails, setIsVesibleDetails] = useState(false);\n  const [currentMove, setCurrentMove] = useState(0);\n  const display = useSelector((state: RootState) => state.display.display);\n\n  return (\n    <>\n      <div\n        className={classNames(\n          'PokemonCard',\n          { 'PokemonCard_Cards': display === 'cards'},\n          { 'PokemonCard_List': display === 'list'},\n        )}\n      >\n        <div\n          className={classNames(\n            'PokemonCard-Reverse',\n            { 'PokemonCard-Reverse_Cards': display === 'cards'},\n            { 'PokemonCard-Reverse_List': display === 'list'},\n          )}\n        ></div>\n        <div\n          className={classNames(\n            'PokemonCard-Face',\n            { 'PokemonCard-Face_Cards': display === 'cards' },\n            { 'PokemonCard-Face_List': display === 'list' },\n          )}\n        >\n          <div\n            className={classNames(\n              'PokemonCard-Container-Image',\n              { 'PokemonCard-Container-Image_Cards': display === 'cards' },\n              { 'PokemonCard-Container-Image_List': display === 'list' },\n            )}\n          >\n            <img\n              src={pokemon.image}\n              alt={pokemon.name}\n              className=\"PokemonCard-Image\"\n            />\n          </div>\n          <h2\n            className={classNames(\n              'PokemonCard-Name',\n              { 'PokemonCard-Name_List': display === 'list' },\n            )}\n          >\n            {pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}\n          </h2>\n          <label\n            className={classNames(\n              'PokemonCard-Details-Container',\n              { 'PokemonCard-Details-Container_Cards': display === 'cards' },\n              { 'PokemonCard-Details-Container_List': display === 'list' },\n              { 'PokemonCard-Details-Container_Cards_Active': isVisibleDetails && display === 'cards'},\n            )}\n            >\n            <p className=\"PokemonCard-Details\">\n              specification\n            </p>\n            <button\n              className={classNames(\n                'PokemonCard-Details-Button',\n                { 'PokemonCard-Details-Button_Cards': display === 'cards' },\n                { 'PokemonCard-Details-Button_List': display === 'list' },\n                { 'PokemonCard-Details-Button_Cards_Active': isVisibleDetails && display === 'cards' },\n                { 'PokemonCard-Details-Button_List_Active': isVisibleDetails && display === 'list' },\n              )}\n              onClick={() => setIsVesibleDetails(!isVisibleDetails)}\n            ></button>\n          </label>\n          <div className={\n            classNames(\n              'PokemonCard-Specification',\n              { 'PokemonCard-Specification_Visible': isVisibleDetails},\n              { 'PokemonCard-Specification_Cards': display === 'cards' },\n              { 'PokemonCard-Specification_List': display === 'list' },\n            )}>\n            <table\n              className={classNames(\n                'PokemonCard-Table',\n                { 'PokemonCard-Table_Cards': display === 'cards' },\n                { 'PokemonCard-Table_List': display === 'list' },\n              )}\n            >\n                <caption\n                  \n                  className={classNames(\n                    'PokemonCard-Table-Main-Title',\n                    { 'PokemonCard-Table-Main-Title_List': display === 'list' },\n                  )}\n                  >\n                    Statistics\n                </caption>\n                <tbody>\n                <tr>\n                  <th className=\"PokemonCard-Table-Title\">HP</th>\n                  <th className=\"PokemonCard-Table-Title\">Att</th>\n                  <th className=\"PokemonCard-Table-Title\">Def</th>\n                  <th className=\"PokemonCard-Table-Title\">Spd</th>\n                  <th className=\"PokemonCard-Table-Title\">SpAtt</th>\n                  <th className=\"PokemonCard-Table-Title\">SpDef</th>\n                </tr>\n                <tr>\n                  <td className=\"PokemonCard-Table-Params\">{pokemon.hp}</td>\n                  <td className=\"PokemonCard-Table-Params\">{pokemon.attack}</td>\n                  <td className=\"PokemonCard-Table-Params\">{pokemon.defense}</td>\n                  <td className=\"PokemonCard-Table-Params\">{pokemon.speed}</td>\n                  <td className=\"PokemonCard-Table-Params\">{pokemon.special_attack}</td>\n                  <td className=\"PokemonCard-Table-Params\">{pokemon.special_defense}</td>\n                </tr>\n              </tbody>\n            </table>\n              <div\n                className=\"PokemonCard-Types-Container\"\n              >\n                <h3\n                  className={classNames(\n                    'PokemonCard-Types-Title',\n                    { 'PokemonCard-Types-Title_List': display === 'list' },\n                  )}\n                >\n                  Type(s) of pokemon\n                </h3>\n                <div className=\"PokemonCard-Types\">\n                {pokemon.types.map(type => (\n                  <div className={`PokemonCard-Type PokemonCard-Type_${type}`}>\n                    {type}\n                  </div>\n                ))}\n                </div>\n              </div>\n            <div\n              className={classNames(\n                'PokemonCard-Moves-Container',\n                { 'PokemonCard-Moves-Container_Cards': display === 'cards' },\n                { 'PokemonCard-Moves-Container_List': display === 'list' },\n              )}\n            >\n              <h3 className={classNames(\n                'PokemonCard-Moves-Title',\n                { 'PokemonCard-Moves-Title_List': display === 'list' },\n              )}>\n                Moves of pokemon\n              </h3>\n              <div className={classNames(\n                'PokemonCard-Moves',\n                { 'PokemonCard-Moves_List': display === 'list' },\n              )}>\n                <button\n                  className={classNames(\n                    'PokemonCard-Button',\n                    'PokemonCard-Button_Left',\n                    { 'PokemonCard-Button_Disabled': currentMove <= 0},\n                  )}\n                  disabled={currentMove <= 0}\n                  onClick={() => setCurrentMove(currentMove - 1)}\n                ></button>\n                <div className=\"PokemonCard-Move\">\n                  {pokemon.moves[currentMove]}\n                </div>\n                <button\n                  className={classNames(\n                    'PokemonCard-Button',\n                    'PokemonCard-Button_Right',\n                    { 'PokemonCard-Button_Disabled': currentMove >= pokemon.moves.length - 1}\n                  )}\n                  disabled={currentMove >= pokemon.moves.length - 1}\n                  onClick={() => setCurrentMove(currentMove + 1)}\n                ></button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {useSelector} from 'react-redux';\nimport { RootState } from '../../store';\nimport { PokemonCard } from '../PokemonCard';\n\nimport './PokemonList.scss'\n\nexport const PokemonList = () => {\n  const search = useSelector((state: RootState) => state.search.search)\n  const pokemons = useSelector((state: RootState) => state.pokemons.pokemons);\n  const type = useSelector((state: RootState) => state.type.type);\n  const display = useSelector((state: RootState) => state.display.display);\n\n  const visiblePokemons = pokemons\n    .filter(pokemon => {\n      const lowSearch = search.toLowerCase();\n      const name = pokemon.name.toLowerCase();\n\n      return name.includes(lowSearch);\n    })\n    .filter(pokemon => {\n      if (!type) {\n        return true;\n      }\n\n      return pokemon.types.includes(type);\n    });\n\n  return (\n    <>\n      {visiblePokemons.length > 0 && (\n        <ul className={classNames(\n          'PokemonList-List',\n          { 'PokemonList-List_Cards': display === 'cards' },\n          { 'PokemonList-List_List': display === 'list'},\n        )}>\n          {visiblePokemons.map(pokemon => (\n            <li\n              key={pokemon.id}\n              className={classNames('PokemonList-Item',\n                {'PokemonList-Item_Cards': display === 'cards' },\n                {'PokemonList-Item_List': display === 'list' },\n              )}\n            >\n              <PokemonCard\n                pokemon={pokemon}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../store';\nimport { action as actionSearch } from '../../store/search';\n\nimport './Search.scss';\n\nexport const Search = () => {\n  const search = useSelector((state: RootState) => state.search.search);\n  const dispatch = useDispatch();\n  const setSearch = (inputSearch: string) => {\n    dispatch(actionSearch.changeSearch(inputSearch));\n  };\n\n  return (\n    <label className=\"Search\">\n      {'Find Pokemon '}\n      <input\n        className=\"Search-Input\"\n        type=\"text\"\n        value={search}\n        onChange={(event) => setSearch(event.target.value)}\n      />\n    </label>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { action as actionType } from '../../store/type';\n\nimport './Type.scss';\n\nexport const Type = () => {\n  const type = useSelector((state: RootState) => state.type.type);\n  const dispatch = useDispatch();\n  const types = useSelector((state: RootState) => state.types.types);\n  const setType = (inputType: string) => {\n    dispatch(actionType.setType(inputType));\n  };\n\n  return (\n    <label className=\"Type\">\n      {'Select type '}\n      <select\n        className=\"Type-Select\"\n        value={type}\n        onChange={(event) => setType(event.target.value)}\n      >\n        <option\n          className=\"Type-Option\"\n          value=\"\"\n        >\n          all\n        </option>\n        {types.map(type => (\n          <option\n            className=\"Type-Option\"\n            value={type.name}\n            key={type.name}\n          >\n            {type.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemonsFromApi } from '../../api/pokemons';\nimport { getTypesFromApi } from '../../api/types';\nimport { RootState } from '../../store';\nimport { Display } from '../Display';\nimport { PokemonList } from '../PokemonList';\nimport { Search } from '../Search';\nimport { Type } from '../Type';\n\nimport './Table.scss';\n\nexport const Table = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const urlForPokemon = useSelector((state: RootState) => state.urlForPokemons.urlForPokemons);\n\n  const dispatch = useDispatch();\n\n  const scrollHandle = (event: any) => {\n    const scrollHeight = event.target.documentElement.scrollHeight;\n    console.log('scrollHeight' + scrollHeight)\n    const scrollTop = event.target.documentElement.scrollTop;\n    console.log('scrollTop' + scrollTop)\n    const innerHeight = window.innerHeight;\n    console.log('innerHeight' + innerHeight)\n    if (scrollHeight - (scrollTop + innerHeight) < 100) {\n      setIsLoading(true);\n      console.log(scrollHeight - (scrollTop + innerHeight))\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getTypesFromApi());\n    document.addEventListener('scroll', scrollHandle);\n    return () => {\n      document.removeEventListener('scroll', scrollHandle);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isLoading) {\n      dispatch(getPokemonsFromApi(urlForPokemon, setIsLoading));\n    }\n  }, [isLoading]);\n\n  return (\n    <div className=\"Table\">\n      <div className=\"Table-Header\">\n        <h1\n          className=\"Table-Title\"\n          onClick={()=> console.log(urlForPokemon)}\n        >\n          Pokemonopedia\n        </h1>\n        <div className=\"Table-Params\">\n          <div className=\"Table-Filters\">\n            <Search />\n            <Type />\n          </div>\n          <Display />\n        </div>\n      </div>\n      <PokemonList />\n    </div>\n  );\n};","import axios from 'axios';\n\nimport {action} from '../store/types'\n\nexport const getTypesFromApi = () => {\n  return function(dispatch) {\n    axios.get('https://pokeapi.co/api/v2/type')\n      .then(types => dispatch(action.getType(types.data.results)))\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\nimport { Table } from './components/Table';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Table />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}