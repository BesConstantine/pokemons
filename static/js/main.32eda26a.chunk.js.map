{"version":3,"sources":["store/display.ts","store/loading.ts","store/pokemons.ts","store/search.ts","store/type.ts","store/types.ts","store/urlForPokemons.ts","store/index.ts","components/Display/Display.tsx","components/PokemonCard/PokemonCard.tsx","components/PokemonList/PokemonList.tsx","components/Search/Search.tsx","components/Type/Type.tsx","components/Table/Table.tsx","api/types.js","api/pokemons.js","index.tsx"],"names":["CHANGE_DISPLAY","action","payload","type","displayState","display","SET_LOADING","loadingState","loading","GET_POKEMONS","ADD_POKEMON","pokemonsState","pokemons","CHANGE_SEARCH","searchState","search","SET_TYPE","typeState","GET_TYPES","typesState","types","CHANGE_URL","urlForPokemonsState","urlForPokemons","rootReducer","combineReducers","state","inputAction","store","createStore","composeWithDevTools","applyMiddleware","thunk","Display","dispatch","useDispatch","useSelector","setDisplay","inputDisplay","actionDisplay","className","classNames","onClick","PokemonCard","props","pokemon","useState","isVisibleDetails","setIsVesibleDetails","currentMove","setCurrentMove","PokemonCard_Cards","PokemonCard_List","src","image","alt","name","toUpperCase","slice","htmlFor","id","hp","attack","defense","speed","special_attack","special_defense","map","disabled","moves","length","PokemonList","setLoading","visiblePokemons","filter","lowSearch","toLowerCase","includes","Search","value","onChange","event","inputSearch","target","actionSearch","Type","inputType","actionType","typeOfPokemon","Table","urlForPokemon","scrollHandle","documentElement","scrollHeight","scrollTop","window","innerHeight","useEffect","axios","get","then","data","results","document","addEventListener","removeEventListener","url","response","actionUrlForPokemon","next","information","pokemonFromApi","actionPokemons","move","sprites","front_default","stats","base_stat","finally","setTimeout","getPokemonsFromApi","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.32eda26a.chunk.js","sourcesContent":["import { AnyAction } from 'redux';\n\nconst CHANGE_DISPLAY = 'CHANGE_DISPLAY';\n\nexport const action = {\n  changeDisplay: (payload: string) => ({ type: CHANGE_DISPLAY, payload }),\n};\n\nexport type DisplayState = {\n  display: string,\n};\n\nexport const displayState: DisplayState = {\n  display: 'cards',\n};\n\nexport const displayReducer = (state = displayState, inputAction: AnyAction) => {\n  switch (inputAction.type) {\n    case CHANGE_DISPLAY:\n      return { ...state, display: inputAction.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst SET_LOADING = 'SET_LOADING';\n\nexport const action = {\n  setLoading: (payload: boolean) => ({ type: SET_LOADING, payload }),\n};\n\nexport type LoadingState = {\n  loading: boolean,\n};\n\nexport const loadingState: LoadingState = {\n  loading: true,\n};\n\nexport const loadingReducer = (state = loadingState, inputAction: AnyAction) => {\n  switch (inputAction.type) {\n    case SET_LOADING:\n      return { ...state, loading: inputAction.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\nimport { Pokemon } from '../types/pokemon';\n\nconst GET_POKEMONS = 'GET_POKEMONS';\nconst ADD_POKEMON = 'ADD_POKEMON';\n\nexport const action = {\n  getPokemons: (payload: any) => ({ type: GET_POKEMONS, payload }),\n  addPokemon: (payload: any) => ({ type: ADD_POKEMON, payload }),\n};\n\nexport type PokemonsState = {\n  pokemons: Pokemon[],\n};\n\nexport const pokemonsState: PokemonsState = {\n  pokemons: [],\n};\n\nexport const pokemonsReducer = (state = pokemonsState, inputAction: AnyAction) => {\n  switch (inputAction.type) {\n    case GET_POKEMONS:\n      return { ...state, pokemons: [...state.pokemons, ...inputAction.payload] };\n    case ADD_POKEMON:\n      return { ...state, pokemons: [...state.pokemons, inputAction.payload] };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst CHANGE_SEARCH = 'CHANGE_SEARCH';\n\nexport const action = {\n  changeSearch: (payload: string) => ({ type: CHANGE_SEARCH, payload }),\n};\n\nexport type SearchState = {\n  search: string,\n};\n\nexport const searchState: SearchState = {\n  search: '',\n};\n\nexport const searchReducer = (state = searchState, inputAction: AnyAction) => {\n  switch (inputAction.type) {\n    case CHANGE_SEARCH:\n      return { ...state, search: inputAction.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst SET_TYPE = 'SET_TYPE';\n\nexport const action = {\n  setType: (payload: string) => ({ type: SET_TYPE, payload }),\n};\n\nexport type TypeState = {\n  type: string,\n};\n\nexport const typeState: TypeState = {\n  type: '',\n};\n\nexport const typeReducer = (state = typeState, inputAction: AnyAction) => {\n  switch (inputAction.type) {\n    case SET_TYPE:\n      return { ...state, type: inputAction.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\nimport { Type } from '../types/type';\n\nconst GET_TYPES = 'GET_TYPES';\n\nexport const action = {\n  getType: (payload: any) => ({ type: GET_TYPES, payload }),\n};\n\nexport type TypesState = {\n  types: Type[],\n};\n\nexport const typesState: TypesState = {\n  types: [],\n};\n\nexport const typesReducer = (state = typesState, inputAction: AnyAction) => {\n  switch (inputAction.type) {\n    case GET_TYPES:\n      return { ...state, types: [...inputAction.payload] };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst CHANGE_URL = 'CHANGE_URL';\n\nexport const action = {\n  changeUrl: (payload: string) => ({ type: CHANGE_URL, payload }),\n};\n\nexport type UrlForPokemonsState = {\n  urlForPokemons: string,\n};\n\nexport const urlForPokemonsState: UrlForPokemonsState = {\n  urlForPokemons: 'https://pokeapi.co/api/v2/pokemon',\n};\n\nexport const urlForPokemonsReducer = (state = urlForPokemonsState, inputAction: AnyAction) => {\n  switch (inputAction.type) {\n    case CHANGE_URL:\n      return { ...state, urlForPokemons: inputAction.payload };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport { displayReducer, DisplayState } from './display';\nimport { loadingReducer, LoadingState } from './loading';\nimport { pokemonsReducer, PokemonsState } from './pokemons';\nimport { searchReducer, SearchState } from './search';\nimport { typeReducer, TypeState } from './type';\nimport { typesReducer, TypesState } from './types';\nimport { urlForPokemonsReducer, UrlForPokemonsState } from './urlForPokemons';\n\nexport type RootState = {\n  search: SearchState,\n  type: TypeState,\n  types: TypesState,\n  pokemons: PokemonsState,\n  urlForPokemons: UrlForPokemonsState,\n  display: DisplayState,\n  loading: LoadingState,\n};\n\nconst rootReducer = combineReducers({\n  search: searchReducer,\n  type: typeReducer,\n  types: typesReducer,\n  pokemons: pokemonsReducer,\n  urlForPokemons: urlForPokemonsReducer,\n  display: displayReducer,\n  loading: loadingReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport React from 'react';\n\nimport { RootState } from '../../store';\nimport { action as actionDisplay } from '../../store/display';\n\nimport './Display.scss';\n\nexport const Display = () => {\n  const dispatch = useDispatch();\n  const display = useSelector((state: RootState) => state.display.display);\n  const setDisplay = (inputDisplay: string) => {\n    dispatch(actionDisplay.changeDisplay(inputDisplay));\n  };\n\n  return (\n    <div className=\"Display\">\n      <button\n        type=\"button\"\n        aria-label=\"Cards\"\n        className={classNames(\n          'Display-Button',\n          'Display-Button_Cards',\n          { 'Display-Button_Active': display === 'cards' },\n        )}\n        onClick={() => setDisplay('cards')}\n      />\n      <button\n        type=\"button\"\n        aria-label=\"List\"\n        className={classNames(\n          'Display-Button',\n          'Display-Button_List',\n          { 'Display-Button_Active': display === 'list' },\n        )}\n        onClick={() => setDisplay('list')}\n      />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport './PokemonCard.scss';\n\nimport { Pokemon } from '../../types/pokemon';\nimport { RootState } from '../../store';\n\ninterface Props {\n  pokemon: Pokemon,\n}\n\nexport const PokemonCard = (props: Props) => {\n  const { pokemon } = props;\n  const [isVisibleDetails, setIsVesibleDetails] = useState(false);\n  const [currentMove, setCurrentMove] = useState(0);\n  const display = useSelector((state: RootState) => state.display.display);\n\n  return (\n    <div\n      className={classNames(\n        'PokemonCard',\n        { PokemonCard_Cards: display === 'cards' },\n        { PokemonCard_List: display === 'list' },\n      )}\n    >\n      <div\n        className={classNames(\n          'PokemonCard-Reverse',\n          { 'PokemonCard-Reverse_Cards': display === 'cards' },\n          { 'PokemonCard-Reverse_List': display === 'list' },\n        )}\n      />\n      <div\n        className={classNames(\n          'PokemonCard-Face',\n          { 'PokemonCard-Face_Cards': display === 'cards' },\n          { 'PokemonCard-Face_List': display === 'list' },\n        )}\n      >\n        <div\n          className={classNames(\n            'PokemonCard-Container-Image',\n            { 'PokemonCard-Container-Image_Cards': display === 'cards' },\n            { 'PokemonCard-Container-Image_List': display === 'list' },\n          )}\n        >\n          <img\n            src={pokemon.image}\n            alt={pokemon.name}\n            className=\"PokemonCard-Image\"\n          />\n        </div>\n        <h2\n          className={classNames(\n            'PokemonCard-Name',\n            { 'PokemonCard-Name_List': display === 'list' },\n          )}\n        >\n          {pokemon.name[0].toUpperCase() + pokemon.name.slice(1)}\n        </h2>\n        <label\n          htmlFor=\"more_info\"\n          className={classNames(\n            'PokemonCard-Details-Container',\n            { 'PokemonCard-Details-Container_Cards': display === 'cards' },\n            { 'PokemonCard-Details-Container_List': display === 'list' },\n            { 'PokemonCard-Details-Container_Cards_Active': isVisibleDetails && display === 'cards' },\n          )}\n        >\n          <p className=\"PokemonCard-Details\">\n            specification\n          </p>\n          <button\n            id=\"more_info\"\n            type=\"button\"\n            className={classNames(\n              'PokemonCard-Details-Button',\n              { 'PokemonCard-Details-Button_Cards': display === 'cards' },\n              { 'PokemonCard-Details-Button_List': display === 'list' },\n              { 'PokemonCard-Details-Button_Cards_Active': isVisibleDetails && display === 'cards' },\n              { 'PokemonCard-Details-Button_List_Active': isVisibleDetails && display === 'list' },\n            )}\n            onClick={() => setIsVesibleDetails(!isVisibleDetails)}\n          />\n        </label>\n        <div\n          className={\n            classNames(\n              'PokemonCard-Specification',\n              { 'PokemonCard-Specification_Visible': isVisibleDetails },\n              { 'PokemonCard-Specification_Cards': display === 'cards' },\n              { 'PokemonCard-Specification_List': display === 'list' },\n            )\n          }\n        >\n          <table\n            className={classNames(\n              'PokemonCard-Table',\n              { 'PokemonCard-Table_Cards': display === 'cards' },\n              { 'PokemonCard-Table_List': display === 'list' },\n            )}\n          >\n            <caption\n              className={classNames(\n                'PokemonCard-Table-Main-Title',\n                { 'PokemonCard-Table-Main-Title_List': display === 'list' },\n              )}\n            >\n              Statistics\n            </caption>\n            <tbody>\n              <tr>\n                <th className=\"PokemonCard-Table-Title\">HP</th>\n                <th className=\"PokemonCard-Table-Title\">Att</th>\n                <th className=\"PokemonCard-Table-Title\">Def</th>\n                <th className=\"PokemonCard-Table-Title\">Spd</th>\n                <th className=\"PokemonCard-Table-Title\">SpAtt</th>\n                <th className=\"PokemonCard-Table-Title\">SpDef</th>\n              </tr>\n              <tr>\n                <td className=\"PokemonCard-Table-Params\">{pokemon.hp}</td>\n                <td className=\"PokemonCard-Table-Params\">{pokemon.attack}</td>\n                <td className=\"PokemonCard-Table-Params\">{pokemon.defense}</td>\n                <td className=\"PokemonCard-Table-Params\">{pokemon.speed}</td>\n                <td className=\"PokemonCard-Table-Params\">{pokemon.special_attack}</td>\n                <td className=\"PokemonCard-Table-Params\">{pokemon.special_defense}</td>\n              </tr>\n            </tbody>\n          </table>\n          <div\n            className=\"PokemonCard-Types-Container\"\n          >\n            <h3\n              className={classNames(\n                'PokemonCard-Types-Title',\n                { 'PokemonCard-Types-Title_List': display === 'list' },\n              )}\n            >\n              Type(s) of pokemon\n            </h3>\n            <div className=\"PokemonCard-Types\">\n              {pokemon.types.map((type) => (\n                <div\n                  key={type}\n                  className={`PokemonCard-Type PokemonCard-Type_${type}`}\n                >\n                  {type}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div\n            className={classNames(\n              'PokemonCard-Moves-Container',\n              { 'PokemonCard-Moves-Container_Cards': display === 'cards' },\n              { 'PokemonCard-Moves-Container_List': display === 'list' },\n            )}\n          >\n            <h3\n              className={classNames(\n                'PokemonCard-Moves-Title',\n                { 'PokemonCard-Moves-Title_List': display === 'list' },\n              )}\n            >\n              Moves of pokemon\n            </h3>\n            <div className={classNames(\n              'PokemonCard-Moves',\n              { 'PokemonCard-Moves_List': display === 'list' },\n            )}\n            >\n              <button\n                aria-label=\"prev_move\"\n                type=\"button\"\n                className={classNames(\n                  'PokemonCard-Button',\n                  'PokemonCard-Button_Left',\n                  { 'PokemonCard-Button_Disabled': currentMove <= 0 },\n                )}\n                disabled={currentMove <= 0}\n                onClick={() => setCurrentMove(currentMove - 1)}\n              />\n              <div className=\"PokemonCard-Move\">\n                {pokemon.moves[currentMove]}\n              </div>\n              <button\n                aria-label=\"next_move\"\n                type=\"button\"\n                className={classNames(\n                  'PokemonCard-Button',\n                  'PokemonCard-Button_Right',\n                  { 'PokemonCard-Button_Disabled': currentMove >= pokemon.moves.length - 1 },\n                )}\n                disabled={currentMove >= pokemon.moves.length - 1}\n                onClick={() => setCurrentMove(currentMove + 1)}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { PokemonCard } from '../PokemonCard';\n\nimport './PokemonList.scss';\n\ntype Props = {\n  setLoading: (value: boolean) => void,\n};\n\nexport const PokemonList = ({ setLoading }: Props) => {\n  const search = useSelector((state: RootState) => state.search.search);\n  const pokemons = useSelector((state: RootState) => state.pokemons.pokemons);\n  const type = useSelector((state: RootState) => state.type.type);\n  const display = useSelector((state: RootState) => state.display.display);\n\n  const visiblePokemons = pokemons\n    .filter((pokemon) => {\n      const lowSearch = search.toLowerCase();\n      const name = pokemon.name.toLowerCase();\n\n      return name.includes(lowSearch);\n    })\n    .filter((pokemon) => {\n      if (!type) {\n        return true;\n      }\n\n      return pokemon.types.includes(type);\n    });\n\n  if (visiblePokemons.length < 18) {\n    setLoading(true);\n  }\n\n  return (\n    <ul\n      className={classNames(\n        'PokemonList-List',\n        { 'PokemonList-List_Cards': display === 'cards' },\n        { 'PokemonList-List_List': display === 'list' },\n      )}\n    >\n      {visiblePokemons.map((pokemon) => (\n        <li\n          key={pokemon.id}\n          className={classNames(\n            'PokemonList-Item',\n            { 'PokemonList-Item_Cards': display === 'cards' },\n            { 'PokemonList-Item_List': display === 'list' },\n          )}\n        >\n          <PokemonCard\n            pokemon={pokemon}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport React from 'react';\n\nimport { RootState } from '../../store';\nimport { action as actionSearch } from '../../store/search';\n\nimport './Search.scss';\n\nexport const Search = () => {\n  const search = useSelector((state: RootState) => state.search.search);\n  const dispatch = useDispatch();\n  const setSearch = (inputSearch: string) => {\n    dispatch(actionSearch.changeSearch(inputSearch));\n  };\n\n  return (\n    <label\n      htmlFor=\"find_pokemon\"\n      className=\"Search\"\n    >\n      {'Find Pokemon '}\n      <input\n        id=\"find_pokemon\"\n        className=\"Search-Input\"\n        type=\"text\"\n        value={search}\n        onChange={(event) => setSearch(event.target.value)}\n      />\n    </label>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport React from 'react';\n\nimport { RootState } from '../../store';\nimport { action as actionType } from '../../store/type';\n\nimport './Type.scss';\n\nexport const Type = () => {\n  const type = useSelector((state: RootState) => state.type.type);\n  const dispatch = useDispatch();\n  const types = useSelector((state: RootState) => state.types.types);\n  const setType = (inputType: string) => {\n    dispatch(actionType.setType(inputType));\n  };\n\n  return (\n    <label\n      htmlFor=\"select_type\"\n      className=\"Type\"\n    >\n      {'Select type '}\n      <select\n        id=\"select_type\"\n        className=\"Type-Select\"\n        value={type}\n        onChange={(event) => setType(event.target.value)}\n      >\n        <option\n          className=\"Type-Option\"\n          value=\"\"\n        >\n          all\n        </option>\n        {types.map((typeOfPokemon) => (\n          <option\n            className=\"Type-Option\"\n            value={typeOfPokemon.name}\n            key={typeOfPokemon.name}\n          >\n            {typeOfPokemon.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemonsFromApi } from '../../api/pokemons';\nimport { getTypesFromApi } from '../../api/types';\nimport { RootState } from '../../store';\nimport { Display } from '../Display';\nimport { PokemonList } from '../PokemonList';\nimport { Search } from '../Search';\nimport { Type } from '../Type';\n\nimport './Table.scss';\n\nexport const Table = () => {\n  const [loading, setLoading] = useState(true);\n  const urlForPokemon = useSelector((state: RootState) => state.urlForPokemons.urlForPokemons);\n\n  const dispatch = useDispatch();\n\n  const scrollHandle = (event: any) => {\n    const { scrollHeight } = event.target.documentElement;\n    const { scrollTop } = event.target.documentElement;\n    const { innerHeight } = window;\n    if (scrollHeight - (scrollTop + innerHeight) < 100) {\n      setLoading(true);\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getTypesFromApi());\n    document.addEventListener('scroll', scrollHandle);\n    return () => {\n      document.removeEventListener('scroll', scrollHandle);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      dispatch(getPokemonsFromApi(urlForPokemon, setLoading));\n    }\n  }, [loading]);\n\n  return (\n    <div className=\"Table\">\n      <div className=\"Table-Header\">\n        <h1\n          className=\"Table-Title\"\n        >\n          Pokemonopedia\n        </h1>\n        <div className=\"Table-Params\">\n          <div className=\"Table-Filters\">\n            <Search />\n            <Type />\n          </div>\n          <Display />\n        </div>\n      </div>\n      <PokemonList\n        setLoading={setLoading}\n      />\n    </div>\n  );\n};\n","import axios from 'axios';\n\nimport { action as actionType } from '../store/types';\n\nexport function getTypesFromApi() {\n  return function (dispatch) {\n    axios.get('https://pokeapi.co/api/v2/type')\n      .then((types) => dispatch(actionType.getType(types.data.results)));\n  };\n}\n","import axios from 'axios';\n\nimport { action as actionPokemons } from '../store/pokemons';\nimport { action as actionUrlForPokemon } from '../store/urlForPokemons';\n\nfunction createPokemon(pokemonFromApi) {\n  const { id, name } = pokemonFromApi;\n  const types = pokemonFromApi.types.map((type) => type.type.name);\n  const moves = pokemonFromApi.moves.map((move) => move.move.name);\n  const image = pokemonFromApi.sprites.front_default;\n  const hp = pokemonFromApi.stats[0].base_stat;\n  const attack = pokemonFromApi.stats[1].base_stat;\n  const defense = pokemonFromApi.stats[2].base_stat;\n  const specialAttack = pokemonFromApi.stats[3].base_stat;\n  const specialDefense = pokemonFromApi.stats[4].base_stat;\n  const speed = pokemonFromApi.stats[5].base_stat;\n\n  return {\n    id,\n    name,\n    types,\n    moves,\n    image,\n    hp,\n    attack,\n    defense,\n    special_attack: specialAttack,\n    special_defense: specialDefense,\n    speed,\n  };\n}\n\nexport const getPokemonsFromApi = (url, setLoading) => {\n  if (url) {\n    return function (dispatch) {\n      axios.get(url)\n        .then((response) => {\n          dispatch(actionUrlForPokemon.changeUrl(response.data.next));\n          for (const pokemon of response.data.results) {\n            axios.get(pokemon.url)\n              .then((information) => {\n                dispatch(actionPokemons.addPokemon(createPokemon(information.data)));\n              });\n          }\n        })\n        .finally(() => setTimeout(() => {\n          setLoading(false);\n        }, 1000));\n    };\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport { store } from './store';\nimport { Table } from './components/Table';\n\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Table />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}