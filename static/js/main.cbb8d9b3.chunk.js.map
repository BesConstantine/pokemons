{"version":3,"sources":["reportWebVitals.ts","store/pokemons.ts","store/search.ts","store/type.ts","store/types.ts","store/urlForPokemons.ts","store/index.ts","api/pokemons.js","components/PokemonCard/PokemonCard.tsx","components/PokemonList/PokemonList.tsx","components/Search/Search.tsx","components/Type/Type.tsx","components/Table/Table.tsx","api/types.js","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GET_POKEMONS","ADD_POKEMON","action","payload","type","pokemonsState","pokemons","CHANGE_SEARCH","searchState","search","SET_TYPE","typeState","GET_TYPES","typesState","types","CHANGE_URL","urlForPokemonsState","urlForPokemons","rootReducer","combineReducers","state","store","createStore","composeWithDevTools","applyMiddleware","thunk","createPokemon","pokemonFromApi","name","id","map","moves","move","image","sprites","front_default","hp","stats","base_stat","attack","defense","special_attack","special_defense","speed","PokemonCard","props","pokemon","useState","isVisibleDetails","setIsVesibleDetails","currentMove","setCurrentMove","onClick","console","log","className","src","alt","classNames","disabled","length","PokemonList","useSelector","visiblePokemons","filter","lowSearch","toLowerCase","includes","Search","dispatch","useDispatch","value","onChange","event","inputSearch","target","actionSearch","Type","inputType","actionType","Table","isLoading","setIsLoading","urlForPokemon","scrollHandle","scrollHeight","documentElement","scrollTop","innerHeight","window","useEffect","axios","get","data","results","document","addEventListener","removeEventListener","url","response","actionUrlForPokemon","next","actionPokemons","finally","setTimeout","getPokemonsFromApi","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cbb8d9b3.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { AnyAction } from 'redux';\nimport { Pokemon } from '../types/pokemon';\n\nconst GET_POKEMONS = 'GET_POKEMONS';\nconst ADD_POKEMON = 'ADD_POKEMON';\n\nexport const action = {\n  getPokemons: (payload: any) => ({ type: GET_POKEMONS, payload }),\n  addPokemon: (payload: any) => ({ type: ADD_POKEMON, payload }),\n};\n\nexport type PokemonsState = {\n  pokemons: Pokemon[],\n};\n\nexport const pokemonsState: PokemonsState = {\n  pokemons: [],\n}\n\nexport const pokemonsReducer = (state = pokemonsState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_POKEMONS:\n      return { ...state, pokemons: [ ...state.pokemons, ...action.payload ]};\n    case ADD_POKEMON:\n      return { ...state, pokemons: [ ...state.pokemons, action.payload ]};\n    default:\n      return state;\n  }\n};\n","import {AnyAction} from 'redux';\n\nconst CHANGE_SEARCH = 'CHANGE_SEARCH';\n\nexport const action = {\n  changeSearch: (payload: string) => ({ type: CHANGE_SEARCH, payload }),\n};\n\nexport type SearchState = {\n  search: string,\n};\n\nexport const searchState: SearchState = {\n  search: '',\n};\n\nexport const searchReducer = (state = searchState, action: AnyAction) => {\n  switch (action.type) {\n    case CHANGE_SEARCH:\n      return { ...state, search: action.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst SET_TYPE = 'SET_TYPE';\n\nexport const action = {\n  setType: (payload: string) => ({ type: SET_TYPE, payload }),\n};\n\nexport type TypeState = {\n  type: string,\n};\n\nexport const typeState: TypeState = {\n  type: '',\n};\n\nexport const typeReducer = (state = typeState, action: AnyAction) => {\n  switch (action.type) {\n    case SET_TYPE:\n      return { ...state, type: action.payload };\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\nimport { Type } from '../types/type';\n\nconst GET_TYPES = 'GET_TYPES';\n\nexport const action = {\n  getType: (payload: any) => ({ type: GET_TYPES, payload }),\n};\n\nexport type TypesState = {\n  types: Type[],\n};\n\nexport const typesState: TypesState = {\n  types: [],\n}\n\nexport const typesReducer = (state = typesState, action: AnyAction) => {\n  switch (action.type) {\n    case GET_TYPES:\n      return { ...state, types: [ ...action.payload ]};\n    default:\n      return state;\n  }\n};\n","import { AnyAction } from 'redux';\n\nconst CHANGE_URL = 'CHANGE_URL';\n\nexport const action = {\n  changeUrl: (payload: string) => ({ type: CHANGE_URL, payload }),\n};\n\nexport type UrlForPokemonsState = {\n  urlForPokemons: string,\n};\n\nexport const urlForPokemonsState: UrlForPokemonsState = {\n  urlForPokemons: 'https://pokeapi.co/api/v2/pokemon',\n}\n\nexport const urlForPokemonsReducer = (state = urlForPokemonsState, action: AnyAction) => {\n  switch (action.type) {\n    case CHANGE_URL:\n      return { ...state, urlForPokemons: action.payload };\n    default:\n      return state;\n  }\n};\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { pokemonsReducer, PokemonsState } from './pokemons';\n\nimport { searchReducer, SearchState } from './search';\nimport { typeReducer, TypeState } from './type';\nimport { typesReducer, TypesState } from './types';\nimport { urlForPokemonsReducer, UrlForPokemonsState } from './urlForPokemons';\n\nexport type RootState = {\n  search: SearchState,\n  type: TypeState,\n  types: TypesState,\n  pokemons: PokemonsState,\n  urlForPokemons: UrlForPokemonsState,\n};\n\nconst rootReducer = combineReducers({\n  search: searchReducer,\n  type: typeReducer,\n  types: typesReducer,\n  pokemons: pokemonsReducer,\n  urlForPokemons: urlForPokemonsReducer,\n});\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n","import axios from 'axios';\n\nimport { action as actionPokemons } from '../store/pokemons'\nimport { action as actionUrlForPokemon } from '../store/urlForPokemons';\n\nfunction createPokemon(pokemonFromApi) {\n  const name = pokemonFromApi.name;\n  const id = pokemonFromApi.id;\n  const types = pokemonFromApi.types.map(type => type.type.name);\n  const moves = pokemonFromApi.moves.map(move => move.move.name);\n  const image = pokemonFromApi.sprites.front_default;\n  const hp = pokemonFromApi.stats[0].base_stat;\n  const attack = pokemonFromApi.stats[1].base_stat;\n  const defense = pokemonFromApi.stats[2].base_stat;\n  const special_attack = pokemonFromApi.stats[3].base_stat;\n  const special_defense = pokemonFromApi.stats[4].base_stat;\n  const speed = pokemonFromApi.stats[5].base_stat;\n\n  return {\n    id,\n    name,\n    types,\n    moves,\n    image,\n    hp,\n    attack,\n    defense,\n    special_attack,\n    special_defense,\n    speed,\n  };\n}\n\nexport const getPokemonsFromApi = (url, setIsLoading) => {\n  if (url) {\n    return function(dispatch) {\n    axios.get(url)\n      .then(response => {\n        dispatch(actionUrlForPokemon.changeUrl(response.data.next))\n        for (const pokemon of response.data.results) {\n          axios.get(pokemon.url)\n            .then(response => {\n              dispatch(actionPokemons.addPokemon(createPokemon(response.data)))\n              console.log('loaded pokemon ' + response.data.id)\n            })\n        }\n      })\n      .finally(() =>setTimeout(() => setIsLoading(false), 1000))\n    }\n  }\n}","import { useState } from 'react';\nimport { Pokemon } from '../../types/pokemon'\nimport classNames from 'classnames';\n\nimport './PokemonCard.scss';\n\ninterface Props {\n  pokemon: Pokemon,\n}\n\nexport const PokemonCard = (props: Props) => {\n  const { pokemon } = props;\n  const [isVisibleDetails, setIsVesibleDetails] = useState(false);\n  const [currentMove, setCurrentMove] = useState(0);\n\n  return (\n    <>\n      <div onClick={() => console.log(pokemon)} className=\"PokemonCard\">\n        <div className=\"PokemonCard-Reverse\"></div>\n        <div className=\"PokemonCard-Face\">\n          <div className=\"PokemonCard-Container-Image\">\n            <img\n              src={pokemon.image}\n              alt={pokemon.name}\n              className=\"PokemonCard-Image\"\n            />\n          </div>\n          <h2 className=\"PokemonCard-Name\">\n            {pokemon.name}\n          </h2>\n          <label className=\"PokemonCard-Details-Container\">\n            <p className=\"PokemonCard-Details\">\n              specification\n            </p>\n            <button\n              className={classNames('PokemonCard-Details-Button', { 'PokemonCard-Details-Button_Active': isVisibleDetails })}\n              onClick={() => setIsVesibleDetails(!isVisibleDetails)}\n            ></button>\n          </label>\n          <div className={\n            classNames(\n              'PokemonCard-Specification',\n              { 'PokemonCard-Specification_Visible': isVisibleDetails}\n            )}>\n            <table className=\"PokemonCard-Table\">\n              <tr>\n                <th className=\"PokemonCard-Table-Title\">HP</th>\n                <th className=\"PokemonCard-Table-Title\">Att</th>\n                <th className=\"PokemonCard-Table-Title\">Def</th>\n                <th className=\"PokemonCard-Table-Title\">Spd</th>\n                <th className=\"PokemonCard-Table-Title\">SpAtt</th>\n                <th className=\"PokemonCard-Table-Title\">SpDef</th>\n              </tr>\n              <tr>\n                <th className=\"PokemonCard-Table-Params\">{pokemon.hp}</th>\n                <th className=\"PokemonCard-Table-Params\">{pokemon.attack}</th>\n                <th className=\"PokemonCard-Table-Params\">{pokemon.defense}</th>\n                <th className=\"PokemonCard-Table-Params\">{pokemon.speed}</th>\n                <th className=\"PokemonCard-Table-Params\">{pokemon.special_attack}</th>\n                <th className=\"PokemonCard-Table-Params\">{pokemon.special_defense}</th>\n              </tr>\n            </table>\n            <div className=\"PokemonCard-Types\">\n              {pokemon.types.map(type => (\n                <div className={`PokemonCard-Type PokemonCard-Type_${type}`}>\n                  {type}\n                </div>\n              ))}\n            </div>\n            <div className=\"PokemonCard-Moves\">\n              <button\n                className={classNames(\n                  'PokemonCard-Button',\n                  'PokemonCard-Button_Left',\n                  { 'PokemonCard-Button_Disabled': currentMove <= 0}\n                )}\n                disabled={currentMove <= 0}\n                onClick={() => setCurrentMove(currentMove - 1)}\n\n              ></button>\n              <div className=\"PokemonCard-Move\">\n                {pokemon.moves[currentMove]}\n              </div>\n              <button\n                className={classNames(\n                  'PokemonCard-Button',\n                  'PokemonCard-Button_Right',\n                  { 'PokemonCard-Button_Disabled': currentMove >= pokemon.moves.length - 1}\n                )}\n                disabled={currentMove >= pokemon.moves.length - 1}\n                onClick={() => setCurrentMove(currentMove + 1)}\n              ></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {useSelector} from 'react-redux';\nimport { RootState } from '../../store';\nimport { PokemonCard } from '../PokemonCard';\n\nimport './PokemonList.scss'\n\nexport const PokemonList = () => {\n  const search = useSelector((state: RootState) => state.search.search)\n  const pokemons = useSelector((state: RootState) => state.pokemons.pokemons);\n  const type = useSelector((state: RootState) => state.type.type);\n\n  const visiblePokemons = pokemons\n    .filter(pokemon => {\n      const lowSearch = search.toLowerCase();\n      const name = pokemon.name.toLowerCase();\n\n      return name.includes(lowSearch);\n    })\n    .filter(pokemon => {\n      if (!type) {\n        return true;\n      }\n\n      return pokemon.types.includes(type);\n    });\n\n  return (\n    <>\n      {visiblePokemons.length > 0 && (\n        <ul className=\"PokemonList-List\">\n          {visiblePokemons.map(pokemon => (\n            <li\n              key={pokemon.id}\n              className=\"PokemonList-Item\"\n            >\n              <PokemonCard\n                pokemon={pokemon}\n              />\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../store';\nimport { action as actionSearch } from '../../store/search';\n\nimport './Search.scss';\n\nexport const Search = () => {\n  const search = useSelector((state: RootState) => state.search.search);\n  const dispatch = useDispatch();\n  const setSearch = (inputSearch: string) => {\n    dispatch(actionSearch.changeSearch(inputSearch));\n  };\n\n  return (\n    <label>\n      {'find Pokemon '}\n      <input\n        type=\"text\"\n        value={search}\n        onChange={(event) => setSearch(event.target.value)}\n      />\n    </label>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../store';\nimport { action as actionType } from '../../store/type';\n\nimport './Type.scss';\n\nexport const Type = () => {\n  const type = useSelector((state: RootState) => state.type.type);\n  const dispatch = useDispatch();\n  const types = useSelector((state: RootState) => state.types.types);\n  const setType = (inputType: string) => {\n    dispatch(actionType.setType(inputType));\n  };\n\n  return (\n    <label>\n      {'select type '}\n      <select\n        value={type}\n        onChange={(event) => setType(event.target.value)}\n      >\n        <option value=\"\">\n          all\n        </option>\n        {types.map(type => (\n          <option\n            value={type.name}\n            key={type.name}\n          >\n            {type.name}\n          </option>\n        ))}\n      </select>\n    </label>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemonsFromApi } from '../../api/pokemons';\nimport { getTypesFromApi } from '../../api/types';\nimport { RootState } from '../../store';\nimport { PokemonList } from '../PokemonList';\nimport { Search } from '../Search';\nimport { Type } from '../Type';\n\nimport './Table.scss';\n\nexport const Table = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const urlForPokemon = useSelector((state: RootState) => state.urlForPokemons.urlForPokemons);\n\n  const dispatch = useDispatch();\n\n  const scrollHandle = (event: any) => {\n    const scrollHeight = event.target.documentElement.scrollHeight;\n    console.log('scrollHeight' + scrollHeight)\n    const scrollTop = event.target.documentElement.scrollTop;\n    console.log('scrollTop' + scrollTop)\n    const innerHeight = window.innerHeight;\n    console.log('innerHeight' + innerHeight)\n    if (scrollHeight - (scrollTop + innerHeight) < 100) {\n      setIsLoading(true);\n      console.log(scrollHeight - (scrollTop + innerHeight))\n    }\n  };\n\n  useEffect(() => {\n    dispatch(getTypesFromApi());\n    document.addEventListener('scroll', scrollHandle);\n    return () => {\n      document.removeEventListener('scroll', scrollHandle);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isLoading) {\n      dispatch(getPokemonsFromApi(urlForPokemon, setIsLoading));\n    }\n  }, [isLoading]);\n\n  return (\n    <div className=\"Table\">\n      <h1\n        className=\"Table-Title\"\n        onClick={()=> console.log(urlForPokemon)}\n      >\n        Pokemonopedia\n      </h1>\n      <div className=\"Table-Params\">\n        <Search />\n        <Type />\n      </div>\n      <PokemonList />\n    </div>\n  );\n};","import axios from 'axios';\n\nimport {action} from '../store/types'\n\nexport const getTypesFromApi = () => {\n  return function(dispatch) {\n    axios.get('https://pokeapi.co/api/v2/type')\n      .then(types => dispatch(action.getType(types.data.results)))\n  }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\nimport { Table } from './components/Table';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <Table />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}